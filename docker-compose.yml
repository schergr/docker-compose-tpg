volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  monitoring-network:
    external: true
  db-network:
    external: true

services:
  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: uptime-kuma
    volumes:
      - ./uptime-kuma-data:/app/data
    ports:
      - 3001:3001  # <Host Port>:<Container Port>
    restart: always
  dashdot:
    image: mauricenino/dashdot:latest
    restart: unless-stopped
    privileged: true
    ports:
      - '8011:3001'
    volumes:
      - /:/mnt/host:ro
    networks:
      - monitoring-network
  telegraf:
    image: docker.io/telegraf:latest
    restart: always
    container_name: telegraf
    hostname: telegraf
    labels:
      - homepage.group=Monitoring & Observability
      - homepage.name=telegraf
      - homepage.href=http://dxp4800plus-342f.tail576f6.ts.net:9126
      - homepage.description=9126:9126
      - homepage.server=my-docker
      - homepage.container=telegraf
      - homepage.siteMonitor=http://telegraf:9126
    networks:
      - monitoring-network
    volumes:
      - /volume3/docker-compose/monitoringobservability/telegraf/mibs/:/usr/share/snmp/mibs/
      - /volume3/docker-compose/monitoringobservability/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9126:9126
    command: telegraf --config /etc/telegraf/telegraf.conf

  prometheus:
    image: docker.io/prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    command: 
      --config.file=/etc/prometheus/prometheus.yml
      --storage.tsdb.path=/etc/prometheus/data
    networks:
      - monitoring-network
    restart: always
    ports:
      - 9090:9090
    volumes:
      - /volume3/docker-compose/monitoringobservability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /volume3/docker-compose/monitoringobservability/prometheus/targets/prometheus.json:/etc/prometheus/targets/prometheus.json
      - /volume3/docker-compose/monitoringobservability/prometheus/targets/grafana.json:/etc/prometheus/targets/grafana.json
    labels:
      - homepage.group=Monitoring & Observability
      - homepage.name=prometheus
      - homepage.href=http://dxp4800plus-342f.tail576f6.ts.net:9090
      - homepage.description=9090:9090
      - homepage.server=my-docker
      - homepage.container=prometheus
      - homepage.siteMonitor=http://prometheus:9090
      - homepage.widget.type=prometheus
      - homepage.widget.url=http://prometheus:9090
  grafana:
    image: docker.io/grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    networks:
      - monitoring-network
    restart: always
    depends_on:
      - prometheus
    ports:
      - 3001:3000
    labels:
      - homepage.group=Monitoring & Observability
      - homepage.name=grafana
      - homepage.href=http://dxp4800plus-342f.tail576f6.ts.net:3001
      - homepage.description=3001:3000
      - homepage.server=my-docker
      - homepage.container=grafana
      - homepage.siteMonitor=http://grafana:3000
      - homepage.widget.type=grafana
      - homepage.widget.url=http://grafana:3000
      - homepage.widget.fields=["dashboards", "datasources", "totalalerts", "alertstriggered"]
      - homepage.widget.username=admin
      - homepage.widget.password=Zachchelsea1986!
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - grafana_data:/var/lib/grafana
      - /volume3/docker-compose/monitoringobservability/grafana/provisioning/:/etc/grafana/provisioning/
  
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    labels:
      - homepage.group=Monitoring & Observability
      - homepage.name=loki
      - homepage.href=http://dxp4800plus-342f.tail576f6.ts.net:3100
      - homepage.description=3100:3100
      - homepage.server=my-docker
      - homepage.container=loki
      - homepage.siteMonitor=http://loki:3100
    networks:
      - monitoring-network
  
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring-network

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    networks:
      - monitoring-network
    labels:
      - homepage.group=Container Management
      - homepage.name=watchtower
      - homepage.server=my-docker
      - homepage.container=watchtower
    environment:
      - WATCHTOWER_DEBUG=false
      - WATCHTOWER_LOG_FORMAT=Pretty
      - WATCHTOWER_POLL_INTERVAL=30
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
    command: --interval 300
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    environment:
      TZ: America/New_York
      DOZZLE_ENABLE_ACTIONS: true
    labels:
      - homepage.group=Container Management
      - homepage.name=Dozzle
      - homepage.server=my-docker
      - homepage.container=dozzle
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 8888:8080
    networks:
      - monitoring-network
  
  autoheal:
    container_name: autoheal
    image: willfarrell/autoheal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    networks:
      - monitoring-network
    labels:
      - homepage.group=Container Management
      - homepage.name=Autoheal
      - homepage.server=my-docker
      - homepage.container=autoheal
    environment:
      AUTOHEAL_CONTAINER_LABEL: all

  speedtest-tracker:
    image: ghcr.io/linuxserver/speedtest-tracker:latest
    container_name: speedtest-tracker
    healthcheck:
     test: curl -f http://localhost:80/ || exit 1
    environment:
       PUID: 1
       PGID: 1
       APP_TIMEZONE: America/New_York
       DISPLAY_TIMEZONE: America/New_York
       APP_KEY: base64:Mk3oIhBicQx5NuTYpKcqNSRt4ANv+3nikg+z9yzWYrI= #docker exec speedtest-tracker php /app/www/artisan key:generate --show
       DB_CONNECTION: pgsql
       DB_HOST: shared-database-db-1
       DB_PORT: 5432
       DB_DATABASE: speedtest
       DB_USERNAME: schergr
       DB_PASSWORD: Zachchelsea1986!
       SPEEDTEST_SCHEDULE: 4 */1 * * *
       SPEEDTEST_SERVERS: 51306, 12563, 53403, 31407, 9125
    volumes:
      - /volume3/docker-compose/speedtest/config:/config:rw
    labels:
      - homepage.group=Monitoring & Observability
      - homepage.name=speedtest-tracker
      - homepage.href=http://dxp4800plus-342f.tail576f6.ts.net:8999
      - homepage.description=8999:80
      - homepage.server=my-docker
      - homepage.container=speedtest-tracker
      - homepage.siteMonitor=http://speedtest-tracker:80
      - homepage.widget.type=speedtest
      - homepage.widget.url=http://speedtest-tracker:80
      - homepage.widget.username=gregscher@gmail.com
      - homepage.widget.password=Zachchelsea1986!
    ports:
      - 8999:80
    restart: on-failure:5
    networks:
      - monitoring-network
      - db-network
